<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Authors>dneedy</Authors>
    <Company />
    <Product>Synchotron</Product>
    <Title>Specflow Serial Scenario Blocker</Title>
    <Description>Synchronise Resources using Blocking behaviour.  (Assume that all resources can be run in parallel, apart from some that are flagged to only run with no other resources in action).  In the context of Specflow, scenarios can be flagged to run alone using traits.  Prevents test runners having to edit the assembly info and rebuild between sequential/parallel run contexts.  Hopefully at some point the Specflow bods autogenerate this sort of this, but not yet, so here we are.</Description>
    <PackageProjectUrl></PackageProjectUrl>
    <RepositoryUrl>https://github.com/dneedy/Specflow-Synchotron.git</RepositoryUrl>
    <RepositoryType />
    <PackageReleaseNotes>Has Testing, so could then be refactored to provide clearer separation between components, and with good READMEs</PackageReleaseNotes>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>Dneedy.Specflow.Synchotron</PackageId>
    <ApplicationIcon>icon.ico</ApplicationIcon>
    <PackageTags>specflow nunit parallel sequential block dneedy</PackageTags>
    <Copyright>David Needham</Copyright>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <Version>2.0.0</Version>
    <PackageIconUrl>https://img.icons8.com/ultraviolet/2x/synchronize.png</PackageIconUrl>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <FileVersion>2.0.0.0</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>C:\Users\dave\source\repos\Specflow-Synchotron\Dneedy.Specflow\Dneedy.Specflow.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
